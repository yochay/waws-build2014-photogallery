@using System.Web.Script.Serialization
@{
    var photoId = UrlData[0];

    var db = Database.Open("PhotoGallery");

    var photo = db.QuerySingle("SELECT * FROM Photos WHERE Id = @0", photoId);
    if (photo == null)
    {
        Response.SetStatus(HttpStatusCode.NotFound);
        return;        
    }

    Page.Title = "Photo - " + photo.FileTitle;

    string description = photo.description;
    // Found a match - so show its info
    var gallery = db.QuerySingle("SELECT * FROM Galleries WHERE Id = @0", photo.GalleryId);
}

<h1>@photo.FileTitle</h1>

<section id="sidebar">
        <p>
            you can <a href="~/Photo/Edit/@photoId" title="edit">edit</a>
            or <a href="~/Photo/Remove/@photoId" title="remove">remove</a> this photo.
        </p>
    <dl>
        <dt class="description">Description</dt>
        <dd class="description">
            @if (!description.IsEmpty())
            {
                <text>@photo.Description</text>
            }
            else 
            {
                <text>The uploader did not provide a description for this photo.</text>
            }
        </dd>
        <dt class="uploaded-by">Uploaded by</dt>
        <dd class="uploaded-by"><a href="~/User/View/@photo.UserName" title="@photo.UserName">@photo.UserName</a></dd>
        <dt class="upload-date">Upload date</dt>
        <dd class="upload-date">@photo.UploadDate</dd>
        <dt class="part-of-gallery">Gallery</dt>
        <dd><a href="~/View/@gallery.Id" title="@gallery.Name">@gallery.Name</a></dd>
    </dl>
    <div class="hide-from-mobile">
        <p>
            <a class="download" href="~/Photo/Full" title="Download: @(photo.FileTitle + photo.FileExtension)">Download full photo!</a> (@(photo.FileSize / 1024) KB)
        </p>
    </div>
</section>

<div id="photo">
    <img class="large-photo" alt="@Html.AttributeEncode(photo.FileTitle)" src="@Href("~/Photo/Thumbnail", photo.Id, new { size="large" })" />
    <div id="number-likes">@photo.Likes</div> 
    <a id="Like" href="javascript:LikePhoto(@Html.Raw(new JavaScriptSerializer().Serialize(photo.id)), @Html.Raw(new JavaScriptSerializer().Serialize(Request.GetCurrentUser(Response))))">Like</a>

</div>